### A Pluto.jl notebook ###
# v0.12.3

using Markdown
using InteractiveUtils

# ╔═╡ b0c7a880-4a86-11eb-3cdd-dde241328d32
begin
	using Plots
	using Flux
end

# ╔═╡ a4b12d00-4a86-11eb-2988-65b168e0956d
md"
# AD for Multivariate Model
"

# ╔═╡ 94066390-4c0b-11eb-37b1-a9e2d7c20300
md"
Last dimension = observation dimension.
"

# ╔═╡ b50dddb0-4a86-11eb-0a20-9f1f722cec79
md"
## MCVE
"

# ╔═╡ ba1e67c0-4a86-11eb-09cf-a905605c8c0c
md"
Suppose our data is generated by the following formula:

$y = 11x_{1} + 2.5x_{2}$
"

# ╔═╡ d8322490-4a86-11eb-2c21-d5117d3febcd
source(x) = (11 .* x[1,:]) .+ (2.5 .* x[2,:])

# ╔═╡ 795becc0-4a87-11eb-2b01-e1981953f4f2
md"
### Model
"

# ╔═╡ f1ed0e8e-4a86-11eb-20ed-6fe93050f42c
begin
	struct Model
		a1
		a2
	end
	Model() = Model(Float64[100], Float64[1])
	@Flux.functor Model
	(m::Model)(x) = (m.a1 .* x[1,:]) .+ (m.a2 .* x[2,:])
end

# ╔═╡ 80dbc920-4a87-11eb-1ef7-3560eb242ca6
begin # Single data
	local model = Model()
	local x = rand(2)
	x, source(x), model(x)
end

# ╔═╡ 3638a040-4bfa-11eb-0e1c-5f0b8ba4e09c
begin # Multiple data
	local model = Model()
	local x = rand(2, 5)
	x, source(x), model(x)
end

# ╔═╡ e74aface-4b5b-11eb-2b4a-9db38d31b09e
md"
### Dataset
"

# ╔═╡ c0d88db0-4a87-11eb-3854-8958f1aa0e26
begin # Syntax for DataLoader
	local model = Model()
	local x = rand(2, 5)
	local y = source(x)
	x, y, Flux.Data.DataLoader((x, y))
end

# ╔═╡ 27b55e30-4b70-11eb-36f9-83455f4933ec
begin # Syntax for data generation
	local a = collect(range(0.0, stop=1.0))
	local b = collect(range(10.0, stop=11.0))
	local c = [[f, s] for f in a for s in b]
	reshape(collect(Base.Iterators.flatten(c)), 2, :)
end

# ╔═╡ f14aa440-4b5b-11eb-31ee-cb82b677faaa
begin
	local range1 = range(0.0, stop=20.0)
	local range2 = range(0.0, stop=500.0)
	local product = [[f, s] for f in range1 for s in range2]
	local x = reshape(collect(Base.Iterators.flatten(product)), 2, :)
	local y = source(x)
	data = Flux.Data.DataLoader((x, y), batchsize=128, shuffle=true)
end

# ╔═╡ 96309c00-4b5a-11eb-128d-0d2da212aaa8
md"
### Training
"

# ╔═╡ 85224920-4c0b-11eb-01e3-3f3af2c63798
begin
	model = Model()
	loss(x, y) = Flux.Losses.mse(model(x), y)
	parameters = Flux.params(model)
end

# ╔═╡ 9b142060-4c0f-11eb-21ae-7b762acc3628
@Flux.epochs 5000 Flux.train!(loss, parameters, data, ADAM(0.001))

# ╔═╡ bb65bf40-4c0f-11eb-389a-9b07e0a2b841
begin
	local x = rand(2, 5)
	local groundtruth = (11, 2.5)
	x, groundtruth, parameters, source(x), model(x)
end

# ╔═╡ Cell order:
# ╟─a4b12d00-4a86-11eb-2988-65b168e0956d
# ╠═b0c7a880-4a86-11eb-3cdd-dde241328d32
# ╟─94066390-4c0b-11eb-37b1-a9e2d7c20300
# ╟─b50dddb0-4a86-11eb-0a20-9f1f722cec79
# ╟─ba1e67c0-4a86-11eb-09cf-a905605c8c0c
# ╠═d8322490-4a86-11eb-2c21-d5117d3febcd
# ╟─795becc0-4a87-11eb-2b01-e1981953f4f2
# ╠═f1ed0e8e-4a86-11eb-20ed-6fe93050f42c
# ╠═80dbc920-4a87-11eb-1ef7-3560eb242ca6
# ╠═3638a040-4bfa-11eb-0e1c-5f0b8ba4e09c
# ╟─e74aface-4b5b-11eb-2b4a-9db38d31b09e
# ╠═c0d88db0-4a87-11eb-3854-8958f1aa0e26
# ╠═27b55e30-4b70-11eb-36f9-83455f4933ec
# ╠═f14aa440-4b5b-11eb-31ee-cb82b677faaa
# ╟─96309c00-4b5a-11eb-128d-0d2da212aaa8
# ╠═85224920-4c0b-11eb-01e3-3f3af2c63798
# ╠═9b142060-4c0f-11eb-21ae-7b762acc3628
# ╠═bb65bf40-4c0f-11eb-389a-9b07e0a2b841
